// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParentsPortal.Models;

namespace ParentsPortal.Migrations
{
    [DbContext(typeof(ParentsDbContext))]
    [Migration("20191208192315_TeacherCourse")]
    partial class TeacherCourse
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ParentsPortal.Models.Course", b =>
                {
                    b.Property<int>("CrsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("CourseFee");

                    b.Property<string>("CourseId")
                        .IsRequired();

                    b.Property<string>("CourseName")
                        .IsRequired();

                    b.Property<string>("Credit")
                        .IsRequired();

                    b.HasKey("CrsId");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("ParentsPortal.Models.Notice", b =>
                {
                    b.Property<int>("NoticeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Notices")
                        .IsRequired();

                    b.HasKey("NoticeId");

                    b.ToTable("Notice");
                });

            modelBuilder.Entity("ParentsPortal.Models.Result", b =>
                {
                    b.Property<int>("ResultId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CrsId");

                    b.Property<string>("Grade")
                        .IsRequired();

                    b.Property<int>("StdId");

                    b.HasKey("ResultId");

                    b.HasIndex("CrsId");

                    b.HasIndex("StdId");

                    b.ToTable("Result");
                });

            modelBuilder.Entity("ParentsPortal.Models.StudentCourse", b =>
                {
                    b.Property<int>("StudentCourseId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CrsId");

                    b.Property<string>("Semester")
                        .IsRequired();

                    b.Property<int>("StdId");

                    b.HasKey("StudentCourseId");

                    b.HasIndex("CrsId");

                    b.HasIndex("StdId");

                    b.ToTable("StudentCourse");
                });

            modelBuilder.Entity("ParentsPortal.Models.StudentInfo", b =>
                {
                    b.Property<int>("StdId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<string>("Batch")
                        .IsRequired();

                    b.Property<string>("BloodGroup")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Fathe")
                        .IsRequired();

                    b.Property<string>("Gender")
                        .IsRequired();

                    b.Property<string>("Mobile")
                        .IsRequired();

                    b.Property<string>("Mother")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(16);

                    b.Property<string>("StudentId")
                        .IsRequired();

                    b.Property<string>("StudentName")
                        .IsRequired();

                    b.HasKey("StdId");

                    b.ToTable("StudentInfo");
                });

            modelBuilder.Entity("ParentsPortal.Models.Teacher", b =>
                {
                    b.Property<int>("TcrId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(16);

                    b.Property<string>("TeacherId")
                        .IsRequired();

                    b.Property<string>("TeacherName")
                        .IsRequired();

                    b.HasKey("TcrId");

                    b.ToTable("Teacher");
                });

            modelBuilder.Entity("ParentsPortal.Models.TeacherCourse", b =>
                {
                    b.Property<int>("TeacherCourseId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CrsId");

                    b.Property<int>("TcrId");

                    b.HasKey("TeacherCourseId");

                    b.HasIndex("CrsId");

                    b.HasIndex("TcrId");

                    b.ToTable("TeacherCourse");
                });

            modelBuilder.Entity("ParentsPortal.Models.Result", b =>
                {
                    b.HasOne("ParentsPortal.Models.Course", "Course")
                        .WithMany("Result")
                        .HasForeignKey("CrsId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ParentsPortal.Models.StudentInfo", "StudentInfo")
                        .WithMany("Result")
                        .HasForeignKey("StdId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ParentsPortal.Models.StudentCourse", b =>
                {
                    b.HasOne("ParentsPortal.Models.Course", "Course")
                        .WithMany("StudentCourse")
                        .HasForeignKey("CrsId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ParentsPortal.Models.StudentInfo", "StudentInfo")
                        .WithMany("StudentCourse")
                        .HasForeignKey("StdId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ParentsPortal.Models.TeacherCourse", b =>
                {
                    b.HasOne("ParentsPortal.Models.Course", "Course")
                        .WithMany("TeacherCourse")
                        .HasForeignKey("CrsId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ParentsPortal.Models.Teacher", "Teacher")
                        .WithMany("TeacherCourse")
                        .HasForeignKey("TcrId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
